#!/usr/bin/env bash
set -euo pipefail

# CyberPanel .NET (PHP-style) â€” MIT License
# Created by Mohd Khalid

usage(){ cat <<'U'
cyberpanel-dotnet v1.2
Usage:
  cyberpanel-dotnet enable <domain> [--dll Main.dll]
  cyberpanel-dotnet redeploy
  cyberpanel-dotnet status <domain>
  cyberpanel-dotnet logs <domain> [--lines N]
  cyberpanel-dotnet port <domain>
  cyberpanel-dotnet disable <domain>
  cyberpanel-dotnet remove <domain> [--purge-runtime]

Notes:
  - Service names use domain with dots -> underscores, e.g. flezora.com -> flezora_com
  - 'remove' stops + disables service, removes env & override; add --purge-runtime to delete /home/<domain>/dotnet
U
}

key(){ echo "$1" | tr "." "_" | tr '[:upper:]' '[:lower:]'; }

cmd="${1:-}"; shift || true

case "$cmd" in
  enable)
    dom="${1:-}"; shift || true
    [[ -n "$dom" ]] || { usage; exit 1; }
    dll=""
    if [[ "${1:-}" == "--dll" ]]; then dll="${2:-}"; fi
    root="/home/${dom}/public_html"
    mkdir -p "$root"
    { [[ -n "$dll" ]] && echo "DLL=$dll" || true; } > "$root/.dotnet"
    systemctl start dotnet-autodeploy.service || true
    echo "[ok] Enable .NET for $dom"
    ;;

  redeploy)
    systemctl start dotnet-autodeploy.service
    ;;

  status)
    dom="${1:-}"; [[ -n "$dom" ]] || { usage; exit 1; }
    systemctl status "dotnet-app@$(key "$dom")"
    ;;

  logs)
    dom="${1:-}"; shift || true
    [[ -n "$dom" ]] || { usage; exit 1; }
    lines=0
    if [[ "${1:-}" == "--lines" ]]; then lines="${2:-100}"; fi
    svc="dotnet-app@$(key "$dom")"
    if [[ "$lines" -gt 0 ]]; then
      journalctl -u "$svc" -n "$lines"
    else
      journalctl -u "$svc" -f
    fi
    ;;

  port)
    dom="${1:-}"; [[ -n "$dom" ]] || { usage; exit 1; }
    env="/etc/dotnet-apps/$(key "$dom").env"
    [[ -f "$env" ]] || { echo "env not found: $env"; exit 2; }
    awk -F= '/ASPNETCORE_URLS/{print $2}' "$env" | awk -F: '{print $3}'
    ;;

  disable)
    dom="${1:-}"; [[ -n "$dom" ]] || { usage; exit 1; }
    systemctl stop "dotnet-app@$(key "$dom")" || true
    systemctl disable "dotnet-app@$(key "$dom")" || true
    echo "[ok] Disabled $dom"
    ;;

  remove)
    dom="${1:-}"; shift || true
    [[ -n "$dom" ]] || { usage; exit 1; }
    purge="no"
    if [[ "${1:-}" == "--purge-runtime" ]]; then purge="yes"; fi
    k="$(key "$dom")"
    svc="dotnet-app@${k}"
    systemctl stop "$svc" || true
    systemctl disable "$svc" || true
    rm -f "/etc/dotnet-apps/${k}.env" || true
    rm -rf "/etc/systemd/system/${svc}.service.d" || true
    systemctl daemon-reload
    if [[ "$purge" == "yes" ]]; then
      rm -rf "/home/${dom}/dotnet" || true
    fi
    echo "[ok] Removed $dom (purge-runtime: $purge)"
    ;;

  *)
    usage; exit 1;;
esac
