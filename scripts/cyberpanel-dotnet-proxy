#!/usr/bin/env bash
set -Eeuo pipefail
shopt -s extglob

red(){ echo -e "\e[31m$*\e[0m"; }
grn(){ echo -e "\e[32m$*\e[0m"; }
yel(){ echo -e "\e[33m$*\e[0m"; }
err(){ red "[ERROR] $*" 1>&2; exit 1; }
info(){ echo "[i] $*"; }
sudo_ok(){ [[ ${EUID:-$(id -u)} -eq 0 ]] || err "Run as root (sudo)."; }
need(){ command -v "$1" >/dev/null 2>&1 || err "Missing dependency: $1 (please install it)"; }

# cyberpanel-dotnet-proxy — manage only the OLS proxy block for a domain
MARK_BEGIN="# >>> cyberpanel-dotnet BEGIN"
MARK_END="# <<< cyberpanel-dotnet END"
LSWS_ROOT=""
VHOSTS_DIR=""

_detect_lsws_root(){
  if [[ -n "${LSWS_ROOT:-}" && -x "${LSWS_ROOT}/bin/lswsctrl" ]]; then echo "$LSWS_ROOT"; return; fi
  if [[ -x "/usr/local/lsws/bin/lswsctrl" ]]; then echo "/usr/local/lsws"; return; fi
  if command -v lswsctrl >/dev/null 2>&1; then
    local p; p=$(command -v lswsctrl)
    p=$(readlink -f "$p" 2>/dev/null || echo "$p")
    echo "${p%/bin/lswsctrl}"; return
  fi
  if [[ -d "/usr/local/lsws" ]]; then echo "/usr/local/lsws"; return; fi
  return 1
}

autodetect(){
  sudo_ok
  LSWS_ROOT=$(_detect_lsws_root) || err "OpenLiteSpeed not found. Install CyberPanel/OpenLiteSpeed first."
  VHOSTS_DIR="$LSWS_ROOT/conf/vhosts"
  [[ -d "$VHOSTS_DIR" ]] || err "Vhosts directory missing at $VHOSTS_DIR"
}

vhconf_for(){
  local domain="$1"; local candidate
  candidate="$VHOSTS_DIR/$domain/vhconf.conf"
  if [[ -f "$candidate" ]]; then echo "$candidate"; return; fi
  candidate=$(find "$VHOSTS_DIR" -maxdepth 2 -type f -name 'vhconf.conf' | grep -E "/${domain}/vhconf\.conf$" -m1 || true)
  [[ -n "$candidate" ]] || err "Vhost for '$domain' not found."
  echo "$candidate"
}

ols_reload(){
  if [[ -x "$LSWS_ROOT/bin/lswsctrl" ]]; then "$LSWS_ROOT/bin/lswsctrl" reload || true; fi
  systemctl reload lsws 2>/dev/null || systemctl restart lsws 2>/dev/null || true
}

add(){
  local domain="$1"; local port="$2"
  [[ "$port" =~ ^[0-9]+$ ]] || err "Port must be numeric"
  autodetect
  local vh; vh=$(vhconf_for "$domain")
  cp -a "$vh" "$vh.bak.$(date +%s)"
  local tmp; tmp=$(mktemp)
  awk -v B="$MARK_BEGIN" -v E="$MARK_END" 'BEGIN{del=0} $0~B{del=1; next} $0~E{del=0; next} {if(!del) print $0}' "$vh" > "$tmp"
  {
    echo "$MARK_BEGIN"
    echo "context / {"
    echo "  type                    proxy"
    echo "  handler                 http://127.0.0.1:$port"
    echo "  addDefaultCharset       off"
    echo "  maxConns                256"
    echo "  rewrite                 0"
    echo "  cacheEnable             0"
    echo "}"
    echo "$MARK_END"
  } >> "$tmp"
  mv "$tmp" "$vh"
  ols_reload
  grn "Proxy added for $domain → 127.0.0.1:$port (OpenLiteSpeed)"
}

remove(){
  local domain="$1"
  autodetect
  local vh; vh=$(vhconf_for "$domain")
  cp -a "$vh" "$vh.bak.$(date +%s)"
  awk -v B="$MARK_BEGIN" -v E="$MARK_END" 'BEGIN{del=0} $0~B{del=1; next} $0~E{del=0; next} {if(!del) print $0}' "$vh" > "$vh.tmp"
  mv "$vh.tmp" "$vh"
  ols_reload
  grn "Proxy removed for $domain (OpenLiteSpeed)"
}

usage(){ cat <<USAGE
cyberpanel-dotnet-proxy — add/remove proxy block in vhconf.conf (OpenLiteSpeed)

Usage:
  cyberpanel-dotnet-proxy add <domain> <port>
  cyberpanel-dotnet-proxy remove <domain>
USAGE
}

main(){
  local cmd="${1:-}"; shift || true
  case "$cmd" in
    add)    [[ $# -eq 2 ]] || err "Usage: add <domain> <port>"; add "$@";;
    remove) [[ $# -eq 1 ]] || err "Usage: remove <domain>"; remove "$@";;
    *) usage;;
  esac
}
main "$@"
